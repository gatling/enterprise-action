name: Run Gatling Enterprise Action

on:
  workflow_dispatch:
    inputs:
      simulation_id:
        type: string
        required: true
      extra_system_properties:
        type: string
        required: false
      extra_environment_variables:
        type: string
        required: false
      override_load_generators:
        type: string
        required: false
      title:
        type: string
        required: false
      description:
        type: string
        required: false
      fail_action_on_run_failure:
        type: boolean
        default: 'true'
      wait_for_run_end:
        type: boolean
        default: 'true'

jobs:
  run-gatling-simulation:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Node
        uses: actions/setup-node@v5
        with:
          node-version: 20
          # Cache is broken until we can enable Corepack directly in setup-node
          # instead of having to wait to enable it manually later.
          # See https://github.com/actions/setup-node/issues/531.
          # cache: 'yarn'
          # Automatic cache detection is broken for the same reason, must be
          # disabled explicitly.
          package-manager-cache: false

      - name: Build
        run: |
          corepack enable
          yarn config set nodeLinker node-modules
          yarn plugin import workspace-tools
          yarn install --immutable
          yarn package

      - name: Gatling Enterprise Action
        id: enterprise-action
        uses: ./
        with:
          api_token: ${{ secrets.TEST_CLOUD_PROD_GATLING_CORP_START_API_TOKEN }}
          simulation_id: ${{ inputs.simulation_id }}
          extra_system_properties: ${{ inputs.extra_system_properties }}
          extra_environment_variables: ${{ inputs.extra_environment_variables }}
          override_load_generators: ${{ inputs.override_load_generators }}
          title: ${{ inputs.title }}
          description: ${{ inputs.description }}
          fail_action_on_run_failure: ${{ inputs.fail_action_on_run_failure }}
          wait_for_run_end: ${{ inputs.wait_for_run_end }}

      - name: Print output
        run: |
          echo "run_id=${{ steps.enterprise-action.outputs.run_id }}"
          echo "reports_url=${{ steps.enterprise-action.outputs.reports_url }}"
          echo "runs_url=${{ steps.enterprise-action.outputs.runs_url }}"
          echo "run_status_code=${{ steps.enterprise-action.outputs.run_status_code }}"
          echo "run_status_name=${{ steps.enterprise-action.outputs.run_status_name }}"
          echo "run_assertions=${{ steps.enterprise-action.outputs.run_assertions }}"
